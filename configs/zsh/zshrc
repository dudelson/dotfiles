#############################################################################
##`````````````````````````````````````````````````````````````````````````##
##``````````````````````````````ZSH OPTIONS````````````````````````````````##
##`````````````````````````````````````````````````````````````````````````##
#############################################################################
# from zprezto environment module
setopt BRACE_CCL          # Allow brace character class list expansion.
setopt COMBINING_CHARS    # Combine zero-length punctuation characters (accents)
                          # with the base character.
setopt RC_QUOTES          # Allow 'Henry''s Garage' instead of 'Henry'\''s Garage'.
unsetopt MAIL_WARNING     # Don't print a warning message if a mail file has been accessed.
setopt LONG_LIST_JOBS     # List jobs in the long format by default.
setopt AUTO_RESUME        # Attempt to resume existing job before creating a new process.
setopt NOTIFY             # Report status of background jobs immediately.
unsetopt BG_NICE          # Don't run all background jobs at a lower priority.
unsetopt HUP              # Don't kill jobs on shell exit.
unsetopt CHECK_JOBS       # Don't report on jobs when shell exit.

# from zprezto history module
setopt BANG_HIST                 # Treat the '!' character specially during expansion.
setopt EXTENDED_HISTORY          # Write the history file in the ':start:elapsed;command' format.
setopt INC_APPEND_HISTORY        # Write to the history file immediately, not when the shell exits.
setopt SHARE_HISTORY             # Share history between all sessions.
setopt HIST_EXPIRE_DUPS_FIRST    # Expire a duplicate event first when trimming history.
setopt HIST_IGNORE_DUPS          # Do not record an event that was just recorded again.
setopt HIST_IGNORE_ALL_DUPS      # Delete an old recorded event if a new event is a duplicate.
setopt HIST_FIND_NO_DUPS         # Do not display a previously found event.
setopt HIST_IGNORE_SPACE         # Do not record an event starting with a space.
setopt HIST_SAVE_NO_DUPS         # Do not write a duplicate event to the history file.
setopt HIST_VERIFY               # Do not execute immediately upon history expansion.
setopt HIST_BEEP                 # Beep when accessing non-existent history.

# from zprezto directory module
setopt AUTO_CD              # Auto changes to a directory without typing cd.
setopt AUTO_PUSHD           # Push the old directory onto the stack on cd.
setopt PUSHD_IGNORE_DUPS    # Do not store duplicates in the stack.
setopt PUSHD_SILENT         # Do not print the directory stack after pushd or popd.
setopt PUSHD_TO_HOME        # Push to home directory when no argument is given.
setopt CDABLE_VARS          # Change directory to a path stored in a variable.
setopt AUTO_NAME_DIRS       # Auto add variable-stored paths to ~ list.
setopt MULTIOS              # Write to multiple descriptors.
setopt EXTENDED_GLOB        # Use extended globbing syntax.
unsetopt CLOBBER            # Do not overwrite existing files with > and >>.
                            # Use >! and >>! to bypass.
# from zprezto utility module
setopt CORRECT

# from zprezto completion module
setopt COMPLETE_IN_WORD    # Complete from both ends of a word.
setopt ALWAYS_TO_END       # Move cursor to the end of a completed word.
setopt PATH_DIRS           # Perform path search even on command names with slashes.
setopt AUTO_MENU           # Show completion menu on a succesive tab press.
setopt AUTO_LIST           # Automatically list choices on ambiguous completion.
setopt AUTO_PARAM_SLASH    # If completed parameter is a directory, add a trailing slash.
unsetopt MENU_COMPLETE     # Do not autoselect the first completion entry.
unsetopt FLOW_CONTROL      # Disable start/stop characters in shell editor.

# other options
setopt INTERACTIVECOMMENTS # allow bash-style comments on the command line
zstyle ':completion:*' menu select # TAB highlights selection, just like in the fish shell

# Envvars have been moved to ~/.zshenv

#############################################################################
##`````````````````````````````````````````````````````````````````````````##
##````````````````````````````````ALIASES``````````````````````````````````##
##`````````````````````````````````````````````````````````````````````````##
#############################################################################
# from zprezto utility module
alias cd='nocorrect cd'
alias cp='nocorrect cp'
alias gcc='nocorrect gcc'
alias grep='nocorrect grep'
alias ln='nocorrect ln'
alias mkdir='nocorrect mkdir -p'
alias mv='nocorrect mv'
alias rm='nocorrect rm'

alias find='noglob find'
alias ftp='noglob ftp'
alias history='noglob history'
alias scp='noglob scp'

alias _='sudo'
alias ls='ls --group-directories-first --color=auto'
alias po='popd'
alias pu='pushd'
alias la='ls -A'
alias sl='ls'

# lists the ten most used commands (from zprezto history module)
alias history-stat="history 0 | awk '{print \$2}' | sort | uniq -c | sort -n -r | head"

########## custom aliases ##########
####################################

# use `maim` to screenshot the entire screen to a file
# screenshot the selected area to a file
alias maims='maim -s -p 1 -c 1,0,0,0.5 --nokeyboard'
# screenshot the entire screen to the clipboard
alias maimc='notify-send "Taking screenshot to clipboard in 3 seconds...";
             maim -d 3 --format=png /dev/stdout | xclip -selection c -t image/png'
# screenshot the selected area to the clipboard
alias maimsc='maim -s -p 1 -c 1,0,0,0.5 --nokeyboard --format=png /dev/stdout | xclip -selection c -t image/png'
# screenshot specifically for org-download
alias maimdl='maim -s -p 1 -c 1,0,0,0.5 --nokeyboard /tmp/screenshot.png'

# fasd aliases
alias v='f -e nvim'
alias e='f -e emacsclient'
alias o='a -e xdg-open'
alias l='d -e "ls --group-directories-first --color=auto"'

# kittens
alias kdiff='kitty +kitten diff'

# systemd aliases
alias sctl='sudo systemctl'
alias uctl='systemctl --user'

# more convenient alternatives to common commands
alias feh='feh --scale-down'
alias mpv='optirun mpv'
alias open='xdg-open 2> /dev/null'
alias top='htop'
alias vim='nvim'
alias gdb='gdb -q'
alias objdump='objdump -M intel'
alias zmv='noglob zmv -W'

# new commands
alias sudovimdiff='SUDO_EDITOR="nvim -d" sudoedit'
alias pingtest='ping -c 3 8.8.8.8'
alias latex-clean='latexmk -c'
alias powercheck='cat /sys/class/power_supply/AC/online'
alias copy='rsync -rh --info="progress2"'
# alias to refresh external monitor
alias swapcaps='setxkbmap -option "ctrl:swapcaps"'
alias mon='xrandr --output DP1 --off && xrandr --output DP1 --mode 1920x1080'
alias find-sync-conflicts='fd -L -t f "\.*sync-conflict\.*" ~/s/gtd ~/s/pkb'

# haskell aliases
alias ghc="stack ghc"
alias ghci="stack ghci"
alias runghc="stack runghc"


# place temporary aliases and variables here
alias jcap="joplin-capture"
alias ec="emacsclient"
# I keep confusing `rm` and `mv`...
alias rm="echo 'Please use delete instead.'"
alias delete="/usr/bin/rm"
# found out last week that `cp` clobber files by default...
alias cp="/usr/bin/cp -i"



# magic aliases (expand with <SPACE>)
typeset -Ag abbreviations
abbreviations=(
    "Ia"    "| awk"
    "Ic"    "| xclip -sel c"
    "Ig"    "| ag"
    "Ih"    "| head"
    "Il"    "| less"
    "It"    "| tail"
    "Is"    "| sort"
    "Iv"    "| ${VISUAL:-${EDITOR}}"
    "Iw"    "| wc"
    "Ix"    "| xargs"
)

#############################################################################
##`````````````````````````````````````````````````````````````````````````##
##```````````````````````````````FUNCTIONS`````````````````````````````````##
##`````````````````````````````````````````````````````````````````````````##
#############################################################################
# from the zprezto utility module
# makes a directory and changes to it.
function mkcd {
    [[ -n "$1" ]] && mkdir -p "$1" && builtin cd "$1"
}

# Changes to a directory and lists its contents.
function cs {
    builtin cd "$argv[-1]" && ls "${(@)argv[1,-2]}"
}

# Pushes an entry onto the directory stack and lists its contents.
function pushdls {
    builtin pushd "$argv[-1]" && ls "${(@)argv[1,-2]}"
}

# Pops an entry off the directory stack and lists its contents.
function popdls {
    builtin popd "$argv[-1]" && ls "${(@)argv[1,-2]}"
}

# like fasd's `z` alias but also perform an `ls`
function zl {
    fasd_cd -d $@ && ls --group-directories-first --color=auto
}

# like fasd's `zz` alias but also perform an `ls`
function zzl {
    fasd_cd -di $@ && ls --group-directories-first --color=auto
}

function tablist-convert {
    xclip -o -sel c | pandoc --from=markdown --to=org --wrap=none | xclip -sel c
    echo "Converted tab list copied to clipboard"
}

# enables magic expansion using <SPACE>
magic-abbrev-expand() {
    local MATCH
    LBUFFER=${LBUFFER%%(#m)[_a-zA-Z0-9]#}
    LBUFFER+=${abbreviations[$MATCH]:-$MATCH}
    zle self-insert
}

# just in case you don't want a magic expansion expanded
no-magic-abbrev-expand() {
    LBUFFER+=' '
}

# colored man pages
man() {
    env \
        LESS_TERMCAP_mb=$(printf "\e[1;31m") \
        LESS_TERMCAP_md=$(printf "\e[1;31m") \
        LESS_TERMCAP_me=$(printf "\e[0m") \
        LESS_TERMCAP_se=$(printf "\e[0m") \
        LESS_TERMCAP_so=$(printf "\e[1;44;33m") \
        LESS_TERMCAP_ue=$(printf "\e[0m") \
        LESS_TERMCAP_us=$(printf "\e[1;32m") \
        PAGER="${commands[less]:-$PAGER}" \
        _NROFF_U=1 \
        PATH="$HOME/bin:$PATH" \
        man "$@"
}

#############################################################################
##`````````````````````````````````````````````````````````````````````````##
##````````````````````````````EXTERNAL MODULES`````````````````````````````##
##`````````````````````````````````````````````````````````````````````````##
#############################################################################
# colors!!!11!
autoload -U colors && colors

# smart urls
autoload -Uz url-quote-magic
zle -N self-insert url-quote-magic

# zmv
autoload -U zmv

# Load and initialize the completion system, ignoring insecure dirs
autoload -Uz compinit && compinit -i

# fasd
eval "$(fasd --init auto)"

# fzf
source /usr/share/fzf/completion.zsh
source /usr/share/fzf/key-bindings.zsh

# syntax highlighting
source /usr/share/zsh/plugins/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh
# autosuggestions (broken in conjunction with syntax highlighting as of june 2016)
#source /usr/share/zsh/plugins/zsh-autosuggestions/zsh-autosuggestions.zsh

#############################################################################
##`````````````````````````````````````````````````````````````````````````##
##```````````````````````````````KEYBINDINGS```````````````````````````````##
##`````````````````````````````````````````````````````````````````````````##
#############################################################################
# emacs line editing
bindkey -e

# initialize and bind the magic key expansion functions
zle -N magic-abbrev-expand
zle -N no-magic-abbrev-expand
bindkey " " magic-abbrev-expand
bindkey "^x" no-magic-abbrev-expand
bindkey -M isearch " " self-insert

bindkey '^X^A' fasd-complete

#############################################################################
##`````````````````````````````````````````````````````````````````````````##
##`````````````````````````````````MISC````````````````````````````````````##
##`````````````````````````````````````````````````````````````````````````##
#############################################################################
# backup prompt, in case powerline doesn't work
export PROMPT="%M %{$fg[blue]%}%~%{$reset_color%} %# "

# enable powerline
powerline-daemon -q
source /usr/share/powerline/bindings/zsh/powerline.zsh
